<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.peppa</groupId>
    <artifactId>pig</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <modules>
        <module>gateway</module>
        <module>dubbo</module>
        <module>db-maintain</module>
        <module>redis</module>
        <module>thread</module>
        <module>servletcontainer</module>
        <module>netty</module>
    </modules>

    <!-- 统一管理版本 -->
    <properties>
        <java.version>1.8</java.version>
        <dubbo.version>2.6.5</dubbo.version>
        <zookeeper.version>3.7.2</zookeeper.version>
        <swagger.version>2.9.2</swagger.version>
        <mysql.version>8.0.13</mysql.version>
        <lombok.version>1.18.4</lombok.version>
        <redis.version>3.0.1</redis.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/>
    </parent>

    <!-- 子模块引用父模块的包时，都是被过滤了(重复依赖被去除) 的，可以不用写版本号 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo.version}</version>
                <!-- 如果包里有重复的依赖，可以去除 -->
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-context</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${redis.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <profiles>
        <!-- profiles 用于 liquibase 区分各个环境 -->
        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <properties>
                <runtime.env>dev</runtime.env>
                <swagger.api.source.host>dev 环境的域名</swagger.api.source.host>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 测试环境 -->
        <profile>
            <id>test</id>
            <properties>
                <runtime.env>test</runtime.env>
                <swagger.api.source.host>test 环境的域名</swagger.api.source.host>
            </properties>
        </profile>
        <!-- 预生产环境 -->
        <profile>
            <id>pre-prod</id>
            <properties>
                <runtime.env>pre-prod</runtime.env>
                <swagger.api.source.host>pre-prod 环境的域名</swagger.api.source.host>
            </properties>
        </profile>
        <!-- 生产环境 -->
        <profile>
            <id>prod</id>
            <properties>
                <runtime.env>prod</runtime.env>
                <swagger.api.source.host>prod 环境的域名</swagger.api.source.host>
            </properties>
        </profile>
    </profiles>

</project>